// prisma\schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model collection {
  collection_id        BigInt                 @id @default(autoincrement())
  collection_date      DateTime               @db.Date
  collection_place     String                 @db.VarChar(255)
  garbage              garbage[]
  volunteer_collection volunteer_collection[] @ignore
}

model garbage {
  garbage_id    BigInt      @id @default(autoincrement())
  collection_id BigInt?
  garbage_type  String      @db.VarChar(255)
  quantity_kg   Float
  collection    collection? @relation(fields: [collection_id], references: [collection_id], onDelete: Restrict, onUpdate: Restrict, map: "garbage_collection_id_foreign")

  @@index([collection_id], map: "garbage_collection_id_foreign")
}

model volunteer {
  volunteer_id         BigInt                 @id @default(autoincrement())
  volunteer_name       String                 @db.VarChar(255)
  volunteer_email      String                 @db.VarChar(255)
  password             String                 @db.Text
  role                 volunteer_role         @default(attendee)
  volunteer_collection volunteer_collection[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model volunteer_collection {
  volunteer_id  BigInt?
  collection_id BigInt?
  collection    collection? @relation(fields: [collection_id], references: [collection_id], onDelete: Restrict, onUpdate: Restrict, map: "volunteer_collection_collection_id_foreign")
  volunteer     volunteer?  @relation(fields: [volunteer_id], references: [volunteer_id], onDelete: Restrict, onUpdate: Restrict, map: "volunteer_collection_volunteer_id_foreign")

  @@index([collection_id], map: "volunteer_collection_collection_id_foreign")
  @@index([volunteer_id], map: "volunteer_collection_volunteer_id_foreign")
  @@ignore
}

enum volunteer_role {
  admin
  attendee
}
